search_tag = новости
facebook_email = pehf6@mail.ru
facebook_password = iMasTesting2024
dbhost = localhost
dbuser = fbparser
dbpassword = fbparser
db = fbparser
gl_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2Njk4OTBkY2E1YjVjYTBkMWVmZDE3MTUiLCJ0eXBlIjoiZGV2Iiwiand0aWQiOiI2Njk4ZTQwZGQ5NGExN2QxMGEyZjY0NjQifQ.-UO5Yr8y7zqjvf9yRXUNVY0r3Y27CSZWQb0CbltWYm4
gl_profile_id = 669890dda5b5ca0d1efd17bf

 # Добавляем счётчик
    link_count = 1

    for post_href_cutted in filtered_links:
        if post_href_cutted:  # Проверка, что ссылка не пустая
            # Проверка наличия ссылки в базе
            cursor.execute("SELECT COUNT(*) FROM posts WHERE post_url = %s", (post_href_cutted,))
            result = cursor.fetchone()
            if result[0] > 0:
                print(f"P - {index}: Ссылка {post_href_cutted} уже присутствует в базе, пропускаем...")
                continue

            # Печать текущего номера ссылки и общего количества
            print(f"P - {index}: Парсинг контента с {post_href_cutted} ({link_count} из {len(filtered_links)})")

            html_content = get_html_content(post_href_cutted)

            creation_time_unix = parse_post_time(html_content)
            logging.debug(f"creation_time_unix: {creation_time_unix}")

            if creation_time_unix is not None:
                creation_time = datetime.datetime.fromtimestamp(creation_time_unix)
            else:
                creation_time = None
                print(f"P - {index}: {creation_time_unix}")
                logging.error("creation_time_unix is None, cannot convert to datetime")

            content = parse_post_content(html_content)

            external_link = parse_external_link(html_content)
            if external_link:
                parsed_url = external_link.split('u=')[1].split('&')[0]
                decoded_url = unquote(parsed_url)
                cutted_decoded_url = trim_decoded_url(decoded_url)
                print(f"P - {index}: Ссылка на внешний источник присутствует. Ссылка: {decoded_url}")
            else:
                parsed_url = None
                decoded_url = None
                cutted_decoded_url = None

            post_id, page_id = parse_metadata(html_content)

            query = """
                INSERT INTO posts (post_url, creation_time, content, external_link, post_id, page_id)
                VALUES (%s, %s, %s, %s, %s, %s)
            """
            data = (post_href_cutted, creation_time, content, cutted_decoded_url, post_id, page_id)
            cursor.execute(query, data)
            db_connection.commit()

            # Увеличиваем счётчик
            link_count += 1

    cursor.close()
    db_connection.close()

    if select_browser == 2:
        gl.clearCookies(profile_id=profile)
        gl.stop()

    driver.quit()